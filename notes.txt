
http://nagareshwar.securityxploded.com/2010/10/22/cryptocode-generate-sha1sha256-hash-using-windows-cryptography-library/


Q: according to this link...
   https://blogs.msdn.microsoft.com/alejacma/2009/01/23/sha-2-support-on-windows-xp/

CALG_SHA_256 is only supported by the "Microsooft Enhanced RSA and AES
Cryptographic Provider", which is not the same as the the provider
being used by p11-capi, "Microsoft Base Smart Card Crypto Provider".
The latter is clearly of type PROV_RSA_FUL, but neets to be of type
PROV_RSA_AES, to use SHA-2 algorithms.  So... the question is, can I
use two different CSPs - one to compute the hash and the other to sign
it?

As it turns out (for me), the Base Smart Card Crypto Provider will
work with the SHA-2 algs, at least on Win8.  Probably on WinXP SP3,
and any Windows newer than that.


CryptDecodeObject

CryptHashCertificate

CryptEncodeObject

CryptAcquireContextW

CryptGetUserKey

CryptReleaseContext

CryptExportKey

CryptDestroyKey

CryptEnumKeyIdentifierProperties

CryptCreateHash

CryptGetHashParam

CryptSetHashParam



BOOL WINAPI CryptSignHash(
  _In_    HCRYPTHASH hHash,
  _In_    DWORD      dwKeySpec,
  _In_    LPCTSTR    sDescription,
  _In_    DWORD      dwFlags,
  _Out_   BYTE       *pbSignature,
  _Inout_ DWORD      *pdwSigLen
); //https://msdn.microsoft.com/en-us/library/windows/desktop/aa380280%28v=vs.85%29.aspx

NTSTATUS WINAPI BCryptSignHash
(
  _In_     BCRYPT_KEY_HANDLE hKey,
  _In_opt_ VOID              *pPaddingInfo,
  _In_     PBYTE             pbInput,
  _In_     DWORD             cbInput,
  _Out_    PBYTE             pbOutput,
  _In_     DWORD             cbOutput,
  _Out_    DWORD             *pcbResult,
  _In_     ULONG             dwFlags
); //https://msdn.microsoft.com/en-us/library/windows/desktop/aa375510%28v=vs.85%29.aspx


CryptDestroyHash

CryptDecrypt

CryptoContext



Q: 
